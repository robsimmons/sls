Library
  signature COMPAT_ARRAY
  signature COMPAT_VECTOR
  signature COMPAT_PATH
  signature COMPAT_SUBSTRING
  signature COMPAT_TEXT_IO
  signature COMPAT_TIMER
  signature COMPAT
  structure Compat
  signature TIME_LIMIT
  structure TimeLimit
#if defined(MLton_20040227)
  (* Empty *)
#elif (SMLNJ_VERSION * 1000 + SMLNJ_MINOR_VERSION >= 110048)
  (* Empty *)
#else
  signature ARRAY_SLICE
  structure ArraySlice
  signature VECTOR_SLICE
  structure VectorSlice
  signature MONO_ARRAY_SLICE
  structure Word8ArraySlice
#endif
is
#if defined(NEW_CM)
  $/basis.cm
#endif
  array.sig
  vector.sig  
  path.sig
  substring.sig
  text-io.sig
  timer.sig
  socket.sig
  compat.sig
  socket.sml
  compat.fun
#if defined(MLton_20040227)
  compat.sml
#elif (SMLNJ_VERSION * 1000 + SMLNJ_MINOR_VERSION >= 110048)
  compat.sml
#else
  timer-97.sml
  array-97.sml
  vector-97.sml
  path-97.sml
  substring-97.sml
  text-io-97.sml
  socket-97.sml
  compat-97.sml    
  array-slice.sig
  array-slice.sml
  vector-slice.sig
  vector-slice.sml
  mono-array-slice.sig
  word8-array-slice.sml
#endif
  time-limit.sig
(* This is slightly tricky. Cmcat, used to generate the MLton version of
   this file, defines both SMLNJ_VERSION and MLton. *)
#if defined(MLton)
  time-limit.sml
#elif defined(SMLNJ_VERSION)
  time-limit-smlnj.sml
#else
  time-limit.sml
#endif
